export {};

/* 抽象メソッドとは？
    
    処理の実態はなく、こんな名前のメソッドがクラスにあるよと宣言するもの
    宣言の事をSignature(シグネチャ)という
    また、抽象メソッドは必ずオーバーライドをする必要がある。

    このコードは、TypeScriptにおける抽象クラスと抽象メソッドの定義を示しています。
    abstract class Animal:
    Animalという名前の抽象クラスを定義しています。抽象クラスは、直接インスタンス化できず、他のクラスが継承するための基盤となります。
    abstract cry(): string;:
    cryという名前の抽象メソッドを定義しています。このメソッドは、戻り値として文字列を返すことが期待されていますが、具体的な実装はこのクラス内にはありません。抽象メソッドは、継承したクラスで必ずオーバーライド（実装）される必要があります。
    このように、抽象クラスと抽象メソッドを使用することで、共通のインターフェースを持つクラスを作成し、実装の一貫性を保つことができます。

*/

// 抽象メソッドには 'abstract' を装飾子として付加する
abstract class Animal {
    abstract cry(): string;
}

class Lion extends Animal {
    cry() {
        return 'roar';
    }
}

// 抽象メソッドで定義されているcry()が実装されていないとエラーになり、実装忘れなどを防ぐ事ができる。
class Tiger extends Animal {
    // cry() {
    //     return 'grrr';
    // }
}
