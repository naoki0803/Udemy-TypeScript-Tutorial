export {};

/** object型とは
 *
 * object型は、任意のプロパティを持つオブジェクトを許可しますが、具体的なプロパティの型や構造を指定することはできません。
 * つまり、object型の変数には、どんな形のオブジェクトでも代入可能です。
 *  1. 柔軟性: object型は、任意のプロパティを持つオブジェクトを許可するため、非常に柔軟です。
 *  2. 型安全性の欠如: プロパティの型を指定しないため、誤った型の値を代入してもエラーになりません。
 *     これが、型安全性の欠如を引き起こす可能性があります。
 *  3. 具体的な型の指定: より厳密な型チェックが必要な場合は、オブジェクトの構造を明示的に定義することが推奨されます。
 *     例えば、{ name: string; age: number; }のように、プロパティの型を指定することができます。
 */

let profile1: object = { name: 'Han' };
//object型に異なる型のプロパティを代入してもエラーにはならない。
profile1 = { brithYear: 1976 };

let profile2: {
    name: string;
} = { name: 'Han' };
// 型を{}で指定すると、その中のプロパティをアノテーション(形を指定)する事が出来る
// profile2 = { birthYear: 1976 }; // stringではないのでエラーになる
